basePath: /api/v1
definitions:
  auth.loginForm:
    properties:
      email_or_nickname:
        type: string
      password:
        maxLength: 50
        minLength: 3
        type: string
    required:
    - email_or_nickname
    - password
    type: object
  auth.registerForm:
    properties:
      email:
        type: string
      nickname:
        maxLength: 50
        minLength: 2
        type: string
      password:
        maxLength: 50
        minLength: 3
        type: string
    required:
    - email
    - nickname
    - password
    type: object
  auth.tokenResponse:
    properties:
      code:
        type: integer
      expire:
        type: string
      token:
        type: string
    type: object
  profile.profileResponse:
    properties:
      about:
        type: string
      logo:
        type: string
      type:
        type: string
    type: object
  profile.updateProfileForm:
    properties:
      about:
        type: string
      logo:
        type: string
      type:
        type: string
    type: object
  validation.ApiError:
    properties:
      field:
        type: string
      msg:
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is a sample server celler server.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Photoclub API
  version: "1.0"
paths:
  /auth/login:
    post:
      consumes:
      - application/json
      description: Login user
      parameters:
      - description: login form
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/auth.loginForm'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/auth.tokenResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/validation.ApiError'
      security:
      - ApiKeyAuth: []
      summary: Auth
      tags:
      - Auth
  /auth/refresh_token:
    get:
      description: Refresh user login token
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/auth.tokenResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/validation.ApiError'
      security:
      - ApiKeyAuth: []
      summary: Auth
      tags:
      - Auth
  /auth/register:
    post:
      description: register user
      parameters:
      - description: register form
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/auth.registerForm'
      produces:
      - application/json
      responses:
        "201":
          description: User created
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/validation.ApiError'
      security:
      - ApiKeyAuth: []
      summary: Auth
      tags:
      - Auth
  /user/profile:
    get:
      description: get user profile
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/profile.profileResponse'
        "500":
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Profile
      tags:
      - Profile
    put:
      description: get user profile
      parameters:
      - description: update profile form
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/profile.updateProfileForm'
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
      security:
      - ApiKeyAuth: []
      summary: Profile
      tags:
      - Profile
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
